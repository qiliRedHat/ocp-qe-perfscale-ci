apiVersion: machine.openshift.io/v1beta1
kind: MachineSet
metadata:
  labels:
    machine.openshift.io/cluster-api-cluster: ${CLUSTER_NAME}
    machine.openshift.io/cluster-api-machine-role: infra
    machine.openshift.io/cluster-api-machine-type: infra
  name: ${CLUSTER_NAME}-infra
  namespace: openshift-machine-api
spec:
  replicas: 3
  selector:
    matchLabels:
      machine.openshift.io/cluster-api-cluster: ${CLUSTER_NAME}
      machine.openshift.io/cluster-api-machineset: ${CLUSTER_NAME}-infra
  template:
    metadata:
      labels:
        machine.openshift.io/cluster-api-cluster: ${CLUSTER_NAME}
        machine.openshift.io/cluster-api-machine-role: infra
        machine.openshift.io/cluster-api-machine-type: infra
        machine.openshift.io/cluster-api-machineset: ${CLUSTER_NAME}-infra
    spec:
      metadata:
        labels:
          node-role.kubernetes.io/infra: ""
      providerSpec:
        value:
          apiVersion: openstackproviderconfig.openshift.io/v1alpha1
          cloudName: openstack
          cloudsSecret:
            name: openstack-cloud-credentials
            namespace: openshift-machine-api
          flavor: ${OPENSHIFT_INFRA_NODE_INSTANCE_TYPE}
          image: ${CLUSTER_NAME}-rhcos
          kind: OpenstackProviderSpec
          networks:
          - filter: {}
            subnets:
            - filter:
                name: ${CLUSTER_NAME}-nodes
                tags: openshiftClusterID=${CLUSTER_NAME}
          securityGroups:
          - filter: {}
            name: ${CLUSTER_NAME}-worker
          serverMetadata:
            Name: ${CLUSTER_NAME}-worker
            openshiftClusterID: ${CLUSTER_NAME}
          tags:
          - openshiftClusterID=${CLUSTER_NAME}
          trunk: true
          userDataSecret:
            name: worker-user-data